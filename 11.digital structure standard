import java.security.*;
import java.security.spec.*;

public class DigitalSignatureExample {
    public static void main(String[] args) {
        try {
            // Generate key pair
            KeyPairGenerator keyGen = KeyPairGenerator.getInstance("DSA");
            SecureRandom random = SecureRandom.getInstance("SHA1PRNG");
            keyGen.initialize(1024, random);

            KeyPair keyPair = keyGen.generateKeyPair();
            PrivateKey privateKey = keyPair.getPrivate();
            PublicKey publicKey = keyPair.getPublic();

            // Create Signature object
            Signature signature = Signature.getInstance("SHA1withDSA");
            signature.initSign(privateKey);

            // Data to be signed
            String data = "Hello, Digital Signature!";
            byte[] dataBytes = data.getBytes();

            // Update and sign the data
            signature.update(dataBytes);
            byte[] signatureBytes = signature.sign();

            System.out.println("Original Data: " + data);
            System.out.println("Signature: " + bytesToHex(signatureBytes));

            
            Signature verifySignature = Signature.getInstance("SHA1withDSA");
            verifySignature.initVerify(publicKey);
            verifySignature.update(dataBytes);

            boolean verified = verifySignature.verify(signatureBytes);
            System.out.println("Signature Verified: " + verified);

        } catch (Exception e) {
            e.printStackTrace();
        }
    }

   
    private static String bytesToHex(byte[] bytes) {
        StringBuilder result = new StringBuilder();
        for (byte b : bytes) {
            result.append(String.format("%02x", b));
        }
        return result.toString();
    }
}
